use flake

# Function to check if MongoDB container is running
mongodb_running() {
  docker ps --format '{{.Names}}' 2>/dev/null | grep -q '^simciv-mongo$'
}

# Function to check if Colima is running
colima_running() {
  colima status 2>/dev/null | grep -q 'Running'
}

# Start services on macOS
if [[ "$(uname)" == "Darwin" ]]; then
  # Track if Colima was already running (for cleanup decision)
  COLIMA_WAS_RUNNING=false
  if colima_running; then
    COLIMA_WAS_RUNNING=true
  else
    echo "🚀 Starting Colima..."
    colima start --cpu 2 --memory 4 --arch "$(uname -m)"
  fi
  
  # Start MongoDB container if not running
  if ! mongodb_running; then
    echo "🍃 Starting MongoDB container..."
    # Run docker in background to avoid blocking direnv
    (
      # Wait for Docker socket to be ready
      max_wait=30
      count=0
      while ! docker info >/dev/null 2>&1 && [ $count -lt $max_wait ]; do
        sleep 1
        count=$((count + 1))
      done
      
      if docker info >/dev/null 2>&1; then
        docker run -d --name simciv-mongo -p 27017:27017 mongo:7.0 >/dev/null 2>&1
        echo "✅ MongoDB started on localhost:27017"
      else
        echo "⚠️  Docker not ready, please start MongoDB manually"
      fi
    ) &
    disown
  else
    echo "✅ MongoDB already running on localhost:27017"
  fi
  
  # Save Colima state for cleanup
  echo "$COLIMA_WAS_RUNNING" > .simciv-colima-state
fi

# On Linux, check if user wants to start MongoDB locally
if [[ "$(uname)" == "Linux" ]] && command -v mongod >/dev/null 2>&1; then
  if ! pgrep -x mongod >/dev/null; then
    echo "💡 MongoDB is available but not running. Start it manually if needed:"
    echo "   mongod --dbpath ./data/db"
  fi
fi

# Create cleanup script for stopping MongoDB
cat > .simciv-cleanup.sh << 'EOF'
#!/bin/bash
# Cleanup script for SimCiv MongoDB

mongodb_running() {
  docker ps --format '{{.Names}}' 2>/dev/null | grep -q '^simciv-mongo$'
}

if [[ "$(uname)" == "Darwin" ]]; then
  # Stop MongoDB container
  if mongodb_running; then
    echo "🧹 Stopping MongoDB container..."
    docker stop simciv-mongo >/dev/null 2>&1
    docker rm simciv-mongo >/dev/null 2>&1
    echo "✅ MongoDB stopped"
  fi
  
  # Stop Colima only if we started it
  if [[ -f .simciv-colima-state ]]; then
    COLIMA_WAS_RUNNING=$(cat .simciv-colima-state)
    if [[ "$COLIMA_WAS_RUNNING" == "false" ]]; then
      echo "🧹 Stopping Colima..."
      colima stop >/dev/null 2>&1
      echo "✅ Colima stopped"
    fi
    rm -f .simciv-colima-state
  fi
fi

# Remove this cleanup script
rm -f .simciv-cleanup.sh
EOF

chmod +x .simciv-cleanup.sh

# Set up trap to cleanup on shell exit (for shells that support it)
if [[ -n "$BASH_VERSION" ]]; then
  trap './.simciv-cleanup.sh 2>/dev/null' EXIT
elif [[ -n "$ZSH_VERSION" ]]; then
  trap './.simciv-cleanup.sh 2>/dev/null' EXIT
fi

