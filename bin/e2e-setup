#!/usr/bin/env bash
# E2E test environment setup script for SimCiv
# This script ensures all prerequisites are met for running E2E tests

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"

echo "üîß SimCiv E2E Test Setup"
echo "========================"
echo ""

# Check if npm dependencies are installed
if [ ! -d "${PROJECT_ROOT}/node_modules" ]; then
    echo "üì¶ Installing npm dependencies..."
    cd "${PROJECT_ROOT}"
    npm install
else
    echo "‚úÖ npm dependencies already installed"
fi

# Check if Playwright is available
echo ""
echo "üåê Checking Playwright..."
if ! npx playwright --version &>/dev/null; then
    echo "üì• Installing Playwright..."
    npm install @playwright/test
fi

# Check for system Chromium browser
echo "üåê Checking for system Chromium browser..."
CHROMIUM_PATH=""
if command -v chromium-browser &>/dev/null; then
    CHROMIUM_PATH=$(command -v chromium-browser)
    echo "‚úÖ Found Chromium at: $CHROMIUM_PATH"
    chromium-browser --version 2>/dev/null || echo "  (version check unavailable)"
elif command -v chromium &>/dev/null; then
    CHROMIUM_PATH=$(command -v chromium)
    echo "‚úÖ Found Chromium at: $CHROMIUM_PATH"
    chromium --version 2>/dev/null || echo "  (version check unavailable)"
elif command -v google-chrome &>/dev/null; then
    CHROMIUM_PATH=$(command -v google-chrome)
    echo "‚úÖ Found Chrome at: $CHROMIUM_PATH"
    google-chrome --version 2>/dev/null || echo "  (version check unavailable)"
else
    echo "‚ö†Ô∏è  No system Chromium/Chrome found. Attempting to install playwright browsers..."
    npx playwright install chromium || echo "‚ö†Ô∏è  Browser installation failed, but tests may still work with fallback"
fi

# Export CHROMIUM_PATH for playwright config
if [ -n "$CHROMIUM_PATH" ]; then
    export CHROMIUM_PATH
    echo "  Using CHROMIUM_PATH=$CHROMIUM_PATH for tests"
fi

# Build the client
echo ""
echo "üèóÔ∏è  Building client application..."
cd "${PROJECT_ROOT}"
npm run build

# Ensure screenshots directory exists
echo ""
echo "üìÅ Creating screenshots directory..."
mkdir -p "${PROJECT_ROOT}/e2e-screenshots"

# Start MongoDB if not already running
echo ""
echo "üçÉ Starting MongoDB..."
"${SCRIPT_DIR}/mongo" start

# Check if server is running on port 3000
echo ""
echo "üîç Checking if server is running on port 3000..."
if lsof -ti:3000 &>/dev/null; then
    echo "‚úÖ Server is already running on port 3000"
else
    echo "üöÄ Starting server..."
    cd "${PROJECT_ROOT}"
    npm start &
    SERVER_PID=$!
    
    # Wait for server to be ready
    echo "‚è≥ Waiting for server to be ready..."
    max_wait=30
    count=0
    while ! curl -s http://localhost:3000/ >/dev/null 2>&1 && [ $count -lt $max_wait ]; do
        sleep 1
        count=$((count + 1))
    done
    
    if curl -s http://localhost:3000/ >/dev/null 2>&1; then
        echo "‚úÖ Server is running on port 3000 (PID: $SERVER_PID)"
    else
        echo "‚ùå Server failed to start"
        exit 1
    fi
fi

echo ""
echo "‚úÖ E2E test environment is ready!"
echo ""
if [ -n "$CHROMIUM_PATH" ]; then
    echo "To run tests with system Chromium:"
    echo "  CHROMIUM_PATH=$CHROMIUM_PATH npm run test:e2e"
    echo ""
    echo "Or export the variable first:"
    echo "  export CHROMIUM_PATH=$CHROMIUM_PATH"
    echo "  npm run test:e2e"
else
    echo "To run tests:"
    echo "  npm run test:e2e"
fi
echo ""
echo "To run tests in UI mode:"
echo "  npx playwright test --ui"
echo ""
echo "To run specific test:"
echo "  npx playwright test e2e/auth.spec.ts"
